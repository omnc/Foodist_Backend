// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MealTypes {
  BREAKFAST
  LUNCH
  DINNER
  SIDEDISH
  APPETIZER
  DESSERT
  DRINK
  BREAD
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  recipes  Recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IngredientBlock {
  id      Int      @id @default(autoincrement())
  title   String
  items   String[]
  recipes Recipe[] @relation("IngredientBlockToRecipe")
}

model Recipe {
  id                Int             @id @default(autoincrement())
  user              User            @relation(fields: [userID], references: [id])
  userID            Int
  title             String
  description       String
  mealtype          MealTypes
  servingSize       Int
  level             Int
  prepTime          Int
  cookTime          Int
  ingredientBlock   IngredientBlock @relation("IngredientBlockToRecipe", fields: [ingredientBlockID], references: [id])
  ingredientBlockID Int
  // Legacy field kept for backward compatibility
  imageUrl          String?
  // New title image for the recipe
  titleImage        String?
  // Multiple description blocks per recipe
  descriptionBlocks DescriptionBlock[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DescriptionBlock {
  id          Int     @id @default(autoincrement())
  description String
  imageUrl    String?
  recipe      Recipe  @relation(fields: [recipeId], references: [id])
  recipeId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
